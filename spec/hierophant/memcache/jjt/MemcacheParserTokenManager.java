/* Generated By:JJTree&JavaCC: Do not edit this line. MemcacheParserTokenManager.java */
package hierophant.memcache.jjt;
import hierophant.memcache.command.Command;
import hierophant.memcache.command.StorageCommand;
import hierophant.memcache.command.SetCommand;
import hierophant.memcache.command.AddCommand;
import hierophant.memcache.command.AppendCommand;
import hierophant.memcache.command.PrependCommand;
import hierophant.memcache.command.ReplaceCommand;
import hierophant.memcache.command.CasCommand;
import hierophant.memcache.command.DeleteCommand;
import hierophant.memcache.command.RetrievalCommand;
import hierophant.memcache.command.VersionCommand;

/** Token Manager. */
public class MemcacheParserTokenManager implements MemcacheParserConstants
{
    void CommonTokenAction(Token t) {
    }

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x4L) != 0L)
            return 65;
         if ((active0 & 0x400000000L) != 0L)
         {
            jjmatchedKind = 35;
            return 65;
         }
         if ((active0 & 0x8000L) != 0L)
         {
            jjmatchedKind = 35;
            return 114;
         }
         if ((active0 & 0x10000L) != 0L)
         {
            jjmatchedKind = 35;
            return 21;
         }
         if ((active0 & 0x8000000L) != 0L)
         {
            jjmatchedKind = 35;
            return 37;
         }
         if ((active0 & 0x2200000L) != 0L)
         {
            jjmatchedKind = 35;
            return 137;
         }
         if ((active0 & 0x5000L) != 0L)
         {
            jjmatchedKind = 35;
            return 183;
         }
         if ((active0 & 0x800L) != 0L)
         {
            jjmatchedKind = 35;
            return 76;
         }
         if ((active0 & 0x2000L) != 0L)
         {
            jjmatchedKind = 35;
            return 101;
         }
         if ((active0 & 0x100000000L) != 0L)
         {
            jjmatchedKind = 35;
            return 63;
         }
         if ((active0 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 35;
            return 56;
         }
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 35;
            return 166;
         }
         return -1;
      case 1:
         if ((active0 & 0x400000000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 1;
            return 65;
         }
         if ((active0 & 0x1000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 1;
            return 193;
         }
         if ((active0 & 0x2200000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 1;
            return 136;
         }
         if ((active0 & 0x4000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 1;
            return 186;
         }
         if ((active0 & 0x800L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 1;
            return 75;
         }
         if ((active0 & 0x8000000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 1;
            return 36;
         }
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 1;
            return 165;
         }
         if ((active0 & 0x2000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 1;
            return 100;
         }
         if ((active0 & 0x10000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 1;
            return 0;
         }
         if ((active0 & 0x8000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 1;
            return 113;
         }
         if ((active0 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 1;
            return 55;
         }
         if ((active0 & 0x100000000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 1;
            return 62;
         }
         return -1;
      case 2:
         if ((active0 & 0x8000000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 2;
            return 23;
         }
         if ((active0 & 0x4000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 2;
            return 185;
         }
         if ((active0 & 0x1800L) != 0L)
            return 194;
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 2;
            return 153;
         }
         if ((active0 & 0x10000L) != 0L)
            return 195;
         if ((active0 & 0x2000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 2;
            return 99;
         }
         if ((active0 & 0x200000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 2;
            return 135;
         }
         if ((active0 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 2;
            return 138;
         }
         if ((active0 & 0x8000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 2;
            return 112;
         }
         if ((active0 & 0x400000000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 2;
            return 65;
         }
         if ((active0 & 0x100000000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 2;
            return 61;
         }
         if ((active0 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 2;
            return 54;
         }
         return -1;
      case 3:
         if ((active0 & 0x2000000L) != 0L)
            return 196;
         if ((active0 & 0x8000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 3;
            return 111;
         }
         if ((active0 & 0x400000000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 3;
            return 65;
         }
         if ((active0 & 0x2000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 3;
            return 98;
         }
         if ((active0 & 0x8000000L) != 0L)
            return 28;
         if ((active0 & 0x4000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 3;
            return 184;
         }
         if ((active0 & 0x100000000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 3;
            return 60;
         }
         if ((active0 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 3;
            return 53;
         }
         if ((active0 & 0x200000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 3;
            return 134;
         }
         if ((active0 & 0x800000L) != 0L)
            return 197;
         return -1;
      case 4:
         if ((active0 & 0x100000000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 4;
            return 59;
         }
         if ((active0 & 0x8000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 4;
            return 110;
         }
         if ((active0 & 0x4000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 4;
            return 193;
         }
         if ((active0 & 0x200000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 4;
            return 122;
         }
         if ((active0 & 0x2000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 4;
            return 97;
         }
         if ((active0 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 4;
            return 52;
         }
         if ((active0 & 0x400000000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 4;
            return 65;
         }
         return -1;
      case 5:
         if ((active0 & 0x4000L) != 0L)
            return 194;
         if ((active0 & 0x2000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 5;
            return 96;
         }
         if ((active0 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 5;
            return 51;
         }
         if ((active0 & 0x8000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 5;
            return 193;
         }
         if ((active0 & 0x400000000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 5;
            return 65;
         }
         if ((active0 & 0x100000000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 5;
            return 58;
         }
         if ((active0 & 0x200000L) != 0L)
            return 198;
         return -1;
      case 6:
         if ((active0 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 6;
            return 50;
         }
         if ((active0 & 0xa000L) != 0L)
            return 194;
         if ((active0 & 0x500000000L) != 0L)
            return 65;
         return -1;
      case 7:
         if ((active0 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 7;
            return 39;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 9:
         return jjStartNfaWithStates_0(0, 2, 65);
      case 83:
         return jjMoveStringLiteralDfa1_0(0x8000000L);
      case 97:
         return jjMoveStringLiteralDfa1_0(0x5000L);
      case 99:
         return jjMoveStringLiteralDfa1_0(0x10000L);
      case 100:
         return jjMoveStringLiteralDfa1_0(0x2200000L);
      case 102:
         return jjMoveStringLiteralDfa1_0(0x40000000L);
      case 105:
         return jjMoveStringLiteralDfa1_0(0x800000L);
      case 110:
         return jjMoveStringLiteralDfa1_0(0x400000000L);
      case 112:
         return jjMoveStringLiteralDfa1_0(0x8000L);
      case 114:
         return jjMoveStringLiteralDfa1_0(0x2000L);
      case 115:
         return jjMoveStringLiteralDfa1_0(0x800L);
      case 118:
         return jjMoveStringLiteralDfa1_0(0x100000000L);
      default :
         return jjMoveNfa_0(22, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 84:
         return jjMoveStringLiteralDfa2_0(active0, 0x8000000L);
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x10000L);
      case 100:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000L);
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x102202800L);
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0x40000000L);
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000L);
      case 111:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000000L);
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0x4000L);
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0x8000L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 65:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000000L);
      case 99:
         return jjMoveStringLiteralDfa3_0(active0, 0x2800000L);
      case 100:
         if ((active0 & 0x1000L) != 0L)
            return jjStartNfaWithStates_0(2, 12, 194);
         break;
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000L);
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000L);
      case 112:
         return jjMoveStringLiteralDfa3_0(active0, 0x6000L);
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0x500000000L);
      case 115:
         if ((active0 & 0x10000L) != 0L)
            return jjStartNfaWithStates_0(2, 16, 195);
         break;
      case 116:
         if ((active0 & 0x800L) != 0L)
            return jjStartNfaWithStates_0(2, 11, 194);
         break;
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0x40000000L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 84:
         if ((active0 & 0x8000000L) != 0L)
            return jjStartNfaWithStates_0(3, 27, 28);
         break;
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0x400204000L);
      case 108:
         return jjMoveStringLiteralDfa4_0(active0, 0x2000L);
      case 112:
         return jjMoveStringLiteralDfa4_0(active0, 0x8000L);
      case 114:
         if ((active0 & 0x800000L) != 0L)
            return jjStartNfaWithStates_0(3, 23, 197);
         else if ((active0 & 0x2000000L) != 0L)
            return jjStartNfaWithStates_0(3, 25, 196);
         break;
      case 115:
         return jjMoveStringLiteralDfa4_0(active0, 0x140000000L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(2, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0);
      return 4;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa5_0(active0, 0x2000L);
      case 101:
         return jjMoveStringLiteralDfa5_0(active0, 0x8000L);
      case 104:
         return jjMoveStringLiteralDfa5_0(active0, 0x40000000L);
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x100000000L);
      case 110:
         return jjMoveStringLiteralDfa5_0(active0, 0x4000L);
      case 112:
         return jjMoveStringLiteralDfa5_0(active0, 0x400000000L);
      case 116:
         return jjMoveStringLiteralDfa5_0(active0, 0x200000L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(3, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0);
      return 5;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa6_0(active0, 0x40000000L);
      case 99:
         return jjMoveStringLiteralDfa6_0(active0, 0x2000L);
      case 100:
         if ((active0 & 0x4000L) != 0L)
            return jjStartNfaWithStates_0(5, 14, 194);
         break;
      case 101:
         if ((active0 & 0x200000L) != 0L)
            return jjStartNfaWithStates_0(5, 21, 198);
         break;
      case 108:
         return jjMoveStringLiteralDfa6_0(active0, 0x400000000L);
      case 110:
         return jjMoveStringLiteralDfa6_0(active0, 0x8000L);
      case 111:
         return jjMoveStringLiteralDfa6_0(active0, 0x100000000L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(4, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0);
      return 6;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa7_0(active0, 0x40000000L);
      case 100:
         if ((active0 & 0x8000L) != 0L)
            return jjStartNfaWithStates_0(6, 15, 194);
         break;
      case 101:
         if ((active0 & 0x2000L) != 0L)
            return jjStartNfaWithStates_0(6, 13, 194);
         break;
      case 110:
         if ((active0 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(6, 32, 65);
         break;
      case 121:
         if ((active0 & 0x400000000L) != 0L)
            return jjStartNfaWithStates_0(6, 34, 65);
         break;
      default :
         break;
   }
   return jjStartNfa_0(5, active0);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(5, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0);
      return 7;
   }
   switch(curChar)
   {
      case 108:
         return jjMoveStringLiteralDfa8_0(active0, 0x40000000L);
      default :
         break;
   }
   return jjStartNfa_0(6, active0);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(6, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0);
      return 8;
   }
   switch(curChar)
   {
      case 108:
         if ((active0 & 0x40000000L) != 0L)
            return jjStartNfaWithStates_0(8, 30, 40);
         break;
      default :
         break;
   }
   return jjStartNfa_0(7, active0);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 193;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 63:
               case 65:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 99:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 56:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 195:
                  if ((0xfffffffeffffdbffL & l) != 0L)
                  {
                     if (kind > 35)
                        kind = 35;
                     jjCheckNAdd(65);
                  }
                  if ((0xfffffffeffffdbffL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 37:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 113:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 138:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 23:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 61:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 193:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 54:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 114:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 40:
                  if ((0xfffffffeffffdbffL & l) != 0L)
                  {
                     if (kind > 35)
                        kind = 35;
                     jjCheckNAdd(65);
                  }
                  if ((0x3fe000000000000L & l) != 0L)
                  {
                     if (kind > 31)
                        kind = 31;
                     jjCheckNAddTwoStates(41, 48);
                  }
                  else if (curChar == 48)
                  {
                     if (kind > 31)
                        kind = 31;
                     jjCheckNAdd(48);
                  }
                  break;
               case 21:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 59:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 194:
                  if ((0xfffffffeffffdbffL & l) != 0L)
                  {
                     if (kind > 35)
                        kind = 35;
                     jjCheckNAdd(65);
                  }
                  if ((0xfffffffeffffdbffL & l) != 0L)
                     jjCheckNAddStates(3, 5);
                  break;
               case 52:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 122:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 75:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 166:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 134:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 153:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 22:
                  if ((0xfffffffeffffdbffL & l) != 0L)
                  {
                     if (kind > 35)
                        kind = 35;
                     jjCheckNAdd(65);
                  }
                  if ((0x3fe000000000000L & l) != 0L)
                  {
                     if (kind > 5)
                        kind = 5;
                     jjCheckNAddStates(6, 11);
                  }
                  else if (curChar == 48)
                  {
                     if (kind > 5)
                        kind = 5;
                  }
                  break;
               case 165:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 136:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 50:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 96:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 184:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 196:
                  if ((0xfffffffeffffdbffL & l) != 0L)
                  {
                     if (kind > 35)
                        kind = 35;
                     jjCheckNAdd(65);
                  }
                  if ((0xfffffffeffffdbffL & l) != 0L)
                     jjCheckNAddStates(12, 14);
                  break;
               case 62:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 28:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 0:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 55:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 110:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 137:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 36:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 185:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 97:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 60:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 198:
                  if ((0xfffffffeffffdbffL & l) != 0L)
                  {
                     if (kind > 35)
                        kind = 35;
                     jjCheckNAdd(65);
                  }
                  if ((0xfffffffeffffdbffL & l) != 0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     jjCheckNAddStates(15, 18);
                  }
                  break;
               case 53:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 111:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 100:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 197:
                  if ((0xfffffffeffffdbffL & l) != 0L)
                  {
                     if (kind > 35)
                        kind = 35;
                     jjCheckNAdd(65);
                  }
                  if ((0xfffffffeffffdbffL & l) != 0L)
                     jjCheckNAddStates(19, 21);
                  break;
               case 186:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 135:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 98:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 183:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 76:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 39:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 58:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 51:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 112:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 101:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 1:
                  if ((0xfffffffeffffdbffL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 2:
                  if ((0x3fe000000000000L & l) != 0L)
                     jjCheckNAddStates(22, 24);
                  break;
               case 3:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(22, 24);
                  break;
               case 4:
                  if ((0x3fe000000000000L & l) != 0L)
                     jjCheckNAddStates(25, 27);
                  break;
               case 5:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(25, 27);
                  break;
               case 6:
                  if ((0x3fe000000000000L & l) != 0L)
                     jjCheckNAddStates(28, 30);
                  break;
               case 7:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(28, 30);
                  break;
               case 8:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddTwoStates(9, 16);
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddTwoStates(9, 16);
                  break;
               case 17:
                  if (curChar != 48)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAdd(16);
                  break;
               case 18:
                  if (curChar == 48)
                     jjCheckNAddTwoStates(8, 17);
                  break;
               case 19:
                  if (curChar == 48)
                     jjCheckNAddTwoStates(6, 18);
                  break;
               case 20:
                  if (curChar == 48)
                     jjCheckNAddTwoStates(4, 19);
                  break;
               case 41:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 31)
                     kind = 31;
                  jjCheckNAddTwoStates(41, 48);
                  break;
               case 49:
                  if (curChar != 48)
                     break;
                  if (kind > 31)
                     kind = 31;
                  jjCheckNAdd(48);
                  break;
               case 66:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  jjCheckNAddStates(6, 11);
                  break;
               case 67:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  jjCheckNAdd(67);
                  break;
               case 68:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 6)
                     kind = 6;
                  jjCheckNAdd(68);
                  break;
               case 69:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 7)
                     kind = 7;
                  jjCheckNAdd(69);
                  break;
               case 70:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAdd(70);
                  break;
               case 71:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 9)
                     kind = 9;
                  jjCheckNAdd(71);
                  break;
               case 72:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(72);
                  break;
               case 73:
                  if (curChar == 48 && kind > 5)
                     kind = 5;
                  break;
               case 78:
                  if ((0xfffffffeffffdbffL & l) != 0L)
                     jjCheckNAddStates(3, 5);
                  break;
               case 79:
                  if ((0x3fe000000000000L & l) != 0L)
                     jjCheckNAddStates(31, 33);
                  break;
               case 80:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(31, 33);
                  break;
               case 81:
                  if ((0x3fe000000000000L & l) != 0L)
                     jjCheckNAddStates(34, 36);
                  break;
               case 82:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(34, 36);
                  break;
               case 83:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddTwoStates(84, 16);
                  break;
               case 84:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddTwoStates(84, 16);
                  break;
               case 85:
                  if (curChar == 48)
                     jjCheckNAddTwoStates(83, 17);
                  break;
               case 86:
                  if (curChar == 48)
                     jjCheckNAddTwoStates(81, 85);
                  break;
               case 123:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  jjCheckNAddStates(15, 18);
                  break;
               case 124:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  jjCheckNAddTwoStates(125, 132);
                  break;
               case 125:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  jjCheckNAddTwoStates(125, 132);
                  break;
               case 133:
                  if (curChar != 48)
                     break;
                  if (kind > 22)
                     kind = 22;
                  jjCheckNAdd(132);
                  break;
               case 139:
                  if ((0xfffffffeffffdbffL & l) != 0L)
                     jjCheckNAddStates(12, 14);
                  break;
               case 140:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  jjCheckNAddTwoStates(141, 148);
                  break;
               case 141:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  jjCheckNAddTwoStates(141, 148);
                  break;
               case 149:
                  if (curChar != 48)
                     break;
                  if (kind > 26)
                     kind = 26;
                  jjCheckNAdd(148);
                  break;
               case 154:
                  if ((0xfffffffeffffdbffL & l) != 0L)
                     jjCheckNAddStates(19, 21);
                  break;
               case 155:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddTwoStates(156, 163);
                  break;
               case 156:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAddTwoStates(156, 163);
                  break;
               case 164:
                  if (curChar != 48)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAdd(163);
                  break;
               case 177:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 20)
                     kind = 20;
                  jjstateSet[jjnewStateCnt++] = 177;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 63:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 99:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 104;
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 56:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 195:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  jjCheckNAddStates(0, 2);
                  break;
               case 37:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 113:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 118;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 138:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 114)
                     jjCheckNAdd(139);
                  break;
               case 23:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 84)
                  {
                     if (kind > 29)
                        kind = 29;
                     jjAddStates(37, 38);
                  }
                  break;
               case 61:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 193:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 100)
                     jjCheckNAdd(78);
                  if (curChar == 100)
                  {
                     if (kind > 17)
                        kind = 17;
                  }
                  break;
               case 54:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 114:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 119;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 40:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 21:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 0;
                  break;
               case 59:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 194:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  jjCheckNAddStates(3, 5);
                  break;
               case 52:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 122:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 101)
                     jjCheckNAdd(123);
                  break;
               case 75:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 116)
                     jjCheckNAdd(78);
                  if (curChar == 116)
                  {
                     if (kind > 17)
                        kind = 17;
                  }
                  break;
               case 166:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 168;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 134:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 153:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 114)
                     jjCheckNAdd(154);
                  break;
               case 22:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 97)
                     jjAddStates(39, 42);
                  else if (curChar == 103)
                     jjAddStates(43, 46);
                  else if (curChar == 105)
                     jjAddStates(47, 48);
                  else if (curChar == 100)
                     jjAddStates(49, 50);
                  else if (curChar == 112)
                     jjAddStates(51, 52);
                  else if (curChar == 114)
                     jjAddStates(53, 54);
                  else if (curChar == 115)
                     jjAddStates(55, 58);
                  else if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 63;
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 56;
                  else if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 37;
                  else if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 165:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 136:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 138;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 50:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 96:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 101)
                     jjCheckNAdd(78);
                  if (curChar == 101)
                  {
                     if (kind > 17)
                        kind = 17;
                  }
                  break;
               case 184:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 110)
                     jjCheckNAdd(115);
                  if (curChar == 110)
                     jjCheckNAdd(109);
                  break;
               case 196:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  jjCheckNAddStates(12, 14);
                  break;
               case 62:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 28:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 115)
                     jjAddStates(59, 60);
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 0:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 115)
                     jjCheckNAdd(1);
                  break;
               case 55:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 110:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 110)
                     jjCheckNAdd(115);
                  if (curChar == 110)
                     jjCheckNAdd(109);
                  break;
               case 137:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 150;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 36:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 185:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 189;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 97:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 102;
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 60:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 198:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (kind > 22)
                     kind = 22;
                  jjCheckNAddStates(15, 18);
                  break;
               case 53:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 111:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 116;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 100:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 105;
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 197:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  jjCheckNAddStates(19, 21);
                  break;
               case 186:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 190;
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 135:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 98:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 103;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 183:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 191;
                  else if (curChar == 100)
                     jjCheckNAdd(115);
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 186;
                  else if (curChar == 100)
                     jjCheckNAdd(109);
                  break;
               case 76:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 93;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 90;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 77;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 39:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 108)
                  {
                     if (kind > 31)
                        kind = 31;
                     jjAddStates(61, 63);
                  }
                  break;
               case 58:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 110)
                  {
                     if (kind > 33)
                        kind = 33;
                  }
                  break;
               case 51:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 112:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 117;
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 101:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 106;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 1:
                  jjCheckNAddStates(0, 2);
                  break;
               case 10:
                  if (curChar == 121 && kind > 18)
                     kind = 18;
                  break;
               case 11:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 24:
                  if (curChar == 115 && kind > 29)
                     kind = 29;
                  break;
               case 25:
                  if (curChar == 109)
                     jjCheckNAdd(24);
                  break;
               case 26:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 29:
                  if (curChar == 115)
                     jjAddStates(59, 60);
                  break;
               case 30:
                  if (curChar == 98)
                     jjCheckNAdd(24);
                  break;
               case 31:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if (curChar == 101)
                     jjCheckNAdd(24);
                  break;
               case 34:
                  if (curChar == 122)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 38:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 42:
                  if (curChar == 121 && kind > 31)
                     kind = 31;
                  break;
               case 43:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 44:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 57:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 64:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 74:
                  if (curChar == 115)
                     jjAddStates(55, 58);
                  break;
               case 77:
                  if (curChar == 116)
                     jjCheckNAdd(78);
                  break;
               case 78:
                  jjCheckNAddStates(3, 5);
                  break;
               case 87:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 88:
                  if (curChar == 115 && kind > 28)
                     kind = 28;
                  break;
               case 89:
                  if (curChar == 98)
                     jjCheckNAdd(88);
                  break;
               case 90:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 91:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 92:
                  if (curChar == 101)
                     jjCheckNAdd(88);
                  break;
               case 93:
                  if (curChar == 122)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 94:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 95:
                  if (curChar == 114)
                     jjAddStates(53, 54);
                  break;
               case 102:
                  if (curChar == 101)
                     jjCheckNAdd(78);
                  break;
               case 103:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 104:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 106:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 107:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 108:
                  if (curChar == 112)
                     jjAddStates(51, 52);
                  break;
               case 109:
                  if (curChar == 100 && kind > 17)
                     kind = 17;
                  break;
               case 115:
                  if (curChar == 100)
                     jjCheckNAdd(78);
                  break;
               case 116:
                  if (curChar == 110)
                     jjCheckNAdd(115);
                  break;
               case 117:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 118:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 119:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 120:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 121:
                  if (curChar == 100)
                     jjAddStates(49, 50);
                  break;
               case 123:
                  if (kind > 22)
                     kind = 22;
                  jjCheckNAddStates(15, 18);
                  break;
               case 126:
                  if (curChar == 121 && kind > 22)
                     kind = 22;
                  break;
               case 127:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 128:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 129:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 130:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 131:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 132:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 139:
                  jjCheckNAddStates(12, 14);
                  break;
               case 142:
                  if (curChar == 121 && kind > 26)
                     kind = 26;
                  break;
               case 143:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 145:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 146:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 147:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 148:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 150:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 151:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 152:
                  if (curChar == 105)
                     jjAddStates(47, 48);
                  break;
               case 154:
                  jjCheckNAddStates(19, 21);
                  break;
               case 157:
                  if (curChar == 121 && kind > 24)
                     kind = 24;
                  break;
               case 158:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 159:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 160:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 161:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 162:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 163:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 167:
                  if (curChar == 109)
                     jjCheckNAdd(88);
                  break;
               case 168:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 169:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 170:
                  if (curChar == 103)
                     jjAddStates(43, 46);
                  break;
               case 171:
                  if (curChar == 116 && kind > 19)
                     kind = 19;
                  break;
               case 172:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 173:
                  if (curChar == 115 && kind > 19)
                     kind = 19;
                  break;
               case 174:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 175:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 176:
                  if (curChar == 116)
                     jjCheckNAdd(177);
                  break;
               case 177:
                  if (kind > 20)
                     kind = 20;
                  jjCheckNAdd(177);
                  break;
               case 178:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 179:
                  if (curChar == 115)
                     jjCheckNAdd(177);
                  break;
               case 180:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 181:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 182:
                  if (curChar == 97)
                     jjAddStates(39, 42);
                  break;
               case 187:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 188:
                  if (curChar == 100)
                     jjCheckNAdd(115);
                  break;
               case 189:
                  if (curChar == 110)
                     jjCheckNAdd(115);
                  break;
               case 190:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 191:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 192:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 63:
               case 65:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 99:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 56:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 195:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(0, 2);
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 35)
                        kind = 35;
                     jjCheckNAdd(65);
                  }
                  break;
               case 37:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 113:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 138:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 23:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 61:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 193:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 54:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 114:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 40:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 21:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 59:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 194:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(3, 5);
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 35)
                        kind = 35;
                     jjCheckNAdd(65);
                  }
                  break;
               case 52:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 122:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 75:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 166:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 134:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 153:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 22:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 165:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 136:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 50:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 96:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 184:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 196:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(12, 14);
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 35)
                        kind = 35;
                     jjCheckNAdd(65);
                  }
                  break;
               case 62:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 28:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 0:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 55:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 110:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 137:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 36:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 185:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 97:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 60:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 198:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 22)
                        kind = 22;
                     jjCheckNAddStates(15, 18);
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 35)
                        kind = 35;
                     jjCheckNAdd(65);
                  }
                  break;
               case 53:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 111:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 100:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 197:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(19, 21);
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 35)
                        kind = 35;
                     jjCheckNAdd(65);
                  }
                  break;
               case 186:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 135:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 98:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 183:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 76:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 39:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 58:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 51:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 112:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 101:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(65);
                  break;
               case 1:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(0, 2);
                  break;
               case 78:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(3, 5);
                  break;
               case 123:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 22)
                     kind = 22;
                  jjCheckNAddStates(15, 18);
                  break;
               case 139:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(12, 14);
                  break;
               case 154:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(19, 21);
                  break;
               case 177:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 20)
                     kind = 20;
                  jjstateSet[jjnewStateCnt++] = 177;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 193 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   1, 2, 20, 78, 79, 86, 67, 68, 69, 70, 71, 72, 139, 140, 149, 123, 
   124, 133, 132, 154, 155, 164, 3, 4, 19, 5, 6, 18, 7, 8, 17, 80, 
   81, 85, 82, 83, 17, 28, 29, 183, 187, 188, 192, 172, 175, 178, 181, 166, 
   169, 137, 151, 114, 120, 101, 107, 76, 87, 91, 94, 32, 35, 40, 49, 48, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, 
"\163\145\164", "\141\144\144", "\162\145\160\154\141\143\145", "\141\160\160\145\156\144", 
"\160\162\145\160\145\156\144", "\143\141\163", null, null, null, null, "\144\145\154\145\164\145", null, 
"\151\156\143\162", null, "\144\145\143\162", null, "\123\124\101\124", null, null, 
"\146\154\165\163\150\137\141\154\154", null, "\166\145\162\163\151\157\156", null, "\156\157\162\145\160\154\171", 
null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
static final long[] jjtoToken = {
   0xfffffffe1L, 
};
static final long[] jjtoSkip = {
   0x1eL, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[193];
private final int[] jjstateSet = new int[386];
protected char curChar;
/** Constructor. */
public MemcacheParserTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public MemcacheParserTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 193; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      CommonTokenAction(matchedToken);
      return matchedToken;
   }

   try { input_stream.backup(0);
      while (curChar <= 32 && (0x100002400L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         CommonTokenAction(matchedToken);
         return matchedToken;
      }
      else
      {
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
